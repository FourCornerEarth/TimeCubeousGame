<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Start the battle!
show_debug_message("OBJ BATTLE CREATED.");
// When battle opens, add self to main registry and end every other state.
state_addSelfToRegistry(global.state, global.registry, 3);
state_notifyPersistent();

show_debug_message("Whole game states at battle init: " + string(global.state));

global.battleNumber++; //Increment the number of battles total
isBossBattle = 0;
currentTurn = 1; //How many turns of battle has there been.

// Next state stores the next state.
nextState = 0;

// Has the state changed?
stateHasChanged = 0;

battle_initBattling();
//show_debug_message("Returned from init to objbattle, battle machine now: " + string(global.btlState));
battle_selectEnemies(0);
//show_debug_message("Returned from selectE, battle machine now: " + string(global.btlState));
battle_getEnemyBattleOps();
//show_debug_message("Returned from getEbtlops, battle machine now: " + string(global.btlState));
battle_createBattleTokens(); // makes all objects necessary for battle
//show_debug_message("Returned from btlTokens, battle machine now: " + string(global.btlState));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Turn the battle off now.
show_debug_message("BATTLE OBJECT DESTROY EVENT.");
global.state[objStateID] = 0;
//ds_list_delete(global.registry, id);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check for major battle events.

if (stateHasChanged) {
   //global.btlState[nextState] = 1;
   global.btlState = state_notifyBattlePersistents(global.btlState, nextState);
   stateHasChanged = 0;
   show_debug_message("STATE CHANGED IN BTL MENU, IS NOW: " + string(global.btlState));
}
   
   if (global.btlState[3]) {
      battleOver = 1;
   }
   
   if (battleOver) {scr_endBattle();}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
