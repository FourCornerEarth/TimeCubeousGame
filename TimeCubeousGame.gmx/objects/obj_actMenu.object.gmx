<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>menu_battleMenuModule</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize an act menu

/* Inherit from original battleMenuModule */
event_inherited();


/* If the menu pointer will move up and down, leave this. 
   If it will move left and right, make orientation = 1. */
orientation = 1;


/* Set the keys based on the orientation you chose.
   PROBABLY SHOULD LEAVE THIS BE! */
scr_setKeysByOrientation(orientation);


/* If you want to change any of the set keys, now is the time to do it. */
//   MENU_KEY_UP_1 = newKey;
//   MENU_KEY_UP_2 = newKey;
//   MENU_KEY_DOWN_1 = newKey;
//   MENU_KEY_DOWN_2 = newKey;
//   MENU_CONFIRM_1 = newKey;
//   MENU_CONFIRM_2 = newKey;
//   MENU_BACK = newKey;
//   MENU_EXIT = newKey;


/* 
   Set scriptToRun to the script that should run when you select an item on menu
*/
scriptToRun = scr_actMenu;


/*
  If your script takes an argument, set it here.
  Currently only takes 1 argument.
*/
argsToPass = 0;


/*
  Declare the amount of vertical space between menu items.
*/
space = 30;



/* Set some necessary initial variables for the object. */
returnBattleState = 0;


/* 
   Set the menu item names for this menuModule
*/
//If menu is an array

menu[0] = "Info";
for(var i = 0; i &lt; array_length_1d(obj_battle.enemyBattleOps); i++) {
        menu[i+1] = obj_battle.enemyBattleOps[i];
}

/* DON'T CHANGE BELOW THIS LINE! */
/**************************************************************************/

/* 
   Set menu to on.
*/
menu_ON = 1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Control menu

event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the GUI


    draw_sprite(spr_pointer, 0, x + 16 +  256 + (cursorPos * 81), y + 350);

    // Draw info and remove options.
    //draw_text(x + 16 + 256 + 30, y + 365, string("Info"));
    //draw_text(x + 16 + 256 + 115, y + 365, string("Remove"));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
