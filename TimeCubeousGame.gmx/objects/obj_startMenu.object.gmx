<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_pointer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// For use with the textbox engine, don't remove until we know more.
global.fnt_textbox=font_add_sprite(spr_fontmain,ord(" "),1,1);

// The following stores the icons for the start menu!
// move is an array of menu options, move[i] is the ith location in the array.
menu[0] = "Start Game";
menu[1] = "Exit Game";

// Declare the amount of vertical space between menu items.
vertSpace = 50;

// Declare the index within the move array where the cursor should be.
cursorPos = 0; // move[cursorPos] returns the item the cursor is pointing to.
// e.g. if cursorPos = 0, then move[cursorPos] should return "Start Game", and
   // the actual cursor should be pointing to "Start Game" in the menu. 


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* Code to move up and down the menu */

// Step events run periodically, a few times per second or so.

// Using var makes move a local variable.

// Local variables only exist within the code they are made, and only that instance 
// of the script. They will be forgotten and restarted every time the script reruns.

var move = 0;
// keyboard_check_pressed() is a bool function that returns 1 if the given
// parameter key is being pressed, 0 ow.

// move will dec by 1 if you're pressing the up arrow or W key.
move -= max(keyboard_check_pressed(vk_up), keyboard_check_pressed(ord("W")), 0);

// move will inc by 1 if you're pressing down arrow or S key.
move += max(keyboard_check_pressed(vk_down), keyboard_check_pressed(ord("S")), 0);

// move = 0 means that right now, we don't want to move.

// Otherwise, change the cursor position, in a circular direction.
if (move != 0) {
   cursorPos += move;
   if (cursorPos &lt; 0) {
      cursorPos = array_length_1d(menu) - 1;
   }
   if (cursorPos &gt;= array_length_1d(menu)) {
        cursorPos = 0;
   }
}

// Check for the selection key push.

var select;
select = max(keyboard_check_released(vk_enter), keyboard_check_released(vk_shift), keyboard_check_released(ord("Z")), 0);

if (select == 1) { scr_startMenu(); }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//on game start

//this boolean will be our textbox checker to freeze other game processes while it's on
//if it's off, nothing happens.
globalvar textbox_ON;

textbox_ON = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_halign(fa_left);
draw_set_valign(fa_middle);
draw_set_font(fnt_codersCrux);
draw_set_color(c_white);


var i;
for (i = 0; i &lt; array_length_1d(menu); i += 1) {
    draw_text(x + 16 + vertSpace, y + (i * vertSpace), string(menu[i]));
}

draw_sprite(sprite_index, 0, x + 16, y - 16 + (cursorPos * vertSpace));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_goto(rm_day_street);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
