<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>LadyL</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// control the speed of the animation

image_speed = .18;
justSpoke = 0;
timesspokento=0;
ctimesspokento=0;
iscorrupt=1;
enddialogue=0;
NPC_name="LadyL";

currentSunchLevel = -5;
synchLVLForCorrupt = -1;
synchLVLForXtremeCorrupt = -50;
synchLVLForCure = 50;
atk = 10;

// NOTE THAT THIS IS PART OF THE NEW STATE MACHINE ENGINE!
state_addSelfToRegistry(global.wState, global.wRegistry, WORLD_STATE.NPC);

state = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Sets an alarm if the textbox no longer exists.

// Used to prevent the text from free scrolling over and over again.


if (!instance_exists(game_textbox) &amp;&amp; justSpoke &gt; 0) {
   justSpoke--;
}

if (!instance_exists(game_textbox) &amp;&amp; justSpoke == 0 &amp;&amp; ctimesspokento == 1){
    //sends you to fight
    game_player.visible = false;
    room_goto(rm_battle);
}

global.wState = state_turnStateOff(global.wState);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Controls object message.

//if synch quest is not active it dies
if (!global.questFlags[1]){
    instance_destroy();
}

//now checking for the state to change how the npc is
state = global.NPCstates[0];
switch (state){
    case 0: 
        //corrupt
        iscorrupt = 1;
        break;
    case 1:
        //cured
        iscorrupt = 0;
        break;
    case 2:
        //dead
        instance_destroy();
        break;
}

//checks if MC is around obj
if(collision_circle(x, y, 90, game_player, false, true) &gt; 0)
{ //if we wanna talk to her
    if(keyboard_check_released(vk_space)) {
    
        //if (state_stepFuncOK(global.wState)) {global.wState = state_toggleStepFunc(global.wState);}
        // Make sure obj is already running text.
        // global.wState[objStateID]
        if (state_stepFuncOK(global.wState) &amp;&amp; !instance_exists(game_textbox) &amp;&amp; (justSpoke == 0))
        {
            // Sends data to npc script
            if (iscorrupt) {
                //npc is corrupt
                
                //for the demo only, if the character has picked up memories
                //the dialogue will vary from the default
                if (global.memories[1]){
                    ctimesspokento = 1;
                } else {
                    ctimesspokento = 0;
                }
                scr_NPC_speak(NPC_name, ctimesspokento, iscorrupt);
                switch (ctimesspokento)
                {
                    case 0:
                        //nothing happens
                        break;
                    case 1:
                        //start the fight
                        //sets the npc you send data to to the battle room
                        global.NPC = 1;
                        global.currentLocation = room;
                        break;
                }
            } else {
                //not corrupt npc
                image_blend = c_white;
                scr_NPC_speak(NPC_name, timesspokento, iscorrupt);
                //noncorrupt times spoken to
                switch (timesspokento)
                {
                    case 1: 
                             enddialogue = 1;
                             break;
                       
                }
            }
            //halts dialogue autostart by pressing space and destroying the tbox
            //without this it will bring up the tbox again
            justSpoke = 20; 
            
            //times spoken to increment on noncorrupt
            if (!enddialogue &amp;&amp; !iscorrupt)
            {
                timesspokento++;
            }  
        }//end check to see if you can talk to her
    }//end spacebar check
}//end circle check

//checking corrupt to change sprite
if (iscorrupt)
{
    image_blend = c_red;
}
//or change it back if not
if (!iscorrupt)
{
    image_blend = -1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="game_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collide!
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,0</point>
    <point>80,0</point>
    <point>80,128</point>
    <point>16,128</point>
  </PhysicsShapePoints>
</object>
