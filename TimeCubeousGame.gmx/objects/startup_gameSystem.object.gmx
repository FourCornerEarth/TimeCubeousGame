<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>show_debug_message("CREATING GAME SYSTEM OBJECT.");


/* Set default keys. */
global.confirmKey = ord("c");
global.upKey = vk_up;
global.downKey = vk_down;
global.leftKey = vk_left;
global.rightKey = vk_right;
global.backKey = ord("x");
global.startKey = vk_space;
global.enterKey = vk_enter;


/* Declare global variables here. */
global.currentLocation = rm_dumpsite;
global.fnt_textbox = fnt_casualEncounter12;

/* Our own colors. */
global.c_resynchGreen = make_color_rgb(32, 214, 9);




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>show_debug_message("GAME SYSTEM DESTROY EVENT.");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Destroy global.registry
audio_stop_all();
if (global.gRegistry) {ds_list_destroy(global.gRegistry);}
if (global.wRegistry) {ds_list_destroy(global.wRegistry);}
//with(state_gameStateHandler){instance_destroy();}
//with(state_worldStateHandler){instance_destroy();}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set variables for game start

// List enums


//Use at beginning of game.
enum STATE {
   WORLD,
   BATTLE,
   EVENT
}

enum BATTLE_STATE {
     PLAYER_TURN,
     UPDATING,
     ENEMY_TURN,
     ENDBATTLE
}

enum WORLD_STATE {
     TEXTBOX,
     MENU,
     PLAYER,
     NPC 
}


enum PLAYER_TURN_STATE {
     IDLE,
     IMPORT,
     ITEM,
     END,
     EVENT,
     TURN_OVER,
     ITEM_OPS
}


enum ENEMY_TURN_STATE {
     EVENT,
     ATK,
     LOAD,
     TURN_OVER
}

enum STATE_STATUS {
     OFF,
     ON
}

enum ENDBATTLE_STATUS {
   RAN,
   CURE,
   KILLED,
   DIED
}

// Set Menu Booleans
global.warp1IsUsed = 0;
global.battleNumber = 0;
global.currentLocation = rm_dumpsite;
global.currentWarpPoint = "";

show_debug_message("CREATING WHOLE GAME STATE REGISTRY.");
global.gRegistry = ds_list_create();
global.gState[STATE.WORLD] = 1; 
global.gState[STATE.BATTLE] = 0; 
global.gState[STATE.EVENT] = 0;


show_debug_message("CREATING WORLD STATE REGISTRY.");
global.wRegistry = ds_list_create();
global.wState[WORLD_STATE.TEXTBOX] = 0; // Stored var for battling
global.wState[WORLD_STATE.MENU] = 0; // Stored var for NPCs.
global.wState[WORLD_STATE.PLAYER] = 0; // Stored var for events.
global.wState[WORLD_STATE.NPC] = 0; // Stored var for events.


show_debug_message("CREATING WHOLE GAME STATE REGISTRY.");

/* Player Info */
//Set default name for now.
global.name = "Near";
global.HP = 50;
global.MP = 5;
global.atk = 5;
global.def = 5;
global.syncBonus = 2;
global.equippedWeapon = "None";
global.equippedArmor = "None";

global.sync = 0;
global.bonus = 0;

/* Our own colors. */
globalvar c_resynchGreen;
global.c_resynchGreen = make_color_rgb(32, 214, 9);



/* Start State Handlers. */
global.gameHandler = instance_create(0, 0, state_gameStateHandler);
global.worldHandler = instance_create(0, 0, state_worldStateHandler);


// Set other booleans here.
global.battleNumber++; //Increment the number of battles total
isBossBattle = 0;
currentTurn = 1; //How many turns of battle has there been.


//temporary, amount of memories collected
i=2;
repeat(3){
    global.memories[i] = 0;
    i--;
}

//quest flags, toby fox style
//0 is food, 1 is asynchro
i=1;
repeat(2){
    global.questFlags[i] = 0;
    i--;
}

//food flags, to make sure food doesn't come back
//after you collect it.
i=10;
repeat(11){
    global.foodFlags[i] = 1;
    i--;
}

//dewila flag for kitchen
global.dewilaflag1 = 0;

//dewila flag for removal from front
//also used to trigger one-time dialogue
global.dewilaflag2 = 0;

//times spoken for kitchen dewila
//for all your kitchen needs
global.dewilaspoke = 0;

//end food quest
global.foodQuestDone = 0;

//has started tutorial
global.tutorial = 0;

//NPC variables
//right now its 0 for GasMouse and 1 for LadyL
//used for knowing which npc is being battled with
global.NPC = 0;

//and the array of states
//0 is corrupt, 1 is cured, 2 is dead
i = 1;
repeat(2){
    global.NPCstates[i] = 0;
}

//player location before a battle
global.locationx = 0;
global.locationy = 0;

battle_resetVariables();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="115">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* Toggle fullscreen status */
window_set_fullscreen(!window_get_fullscreen());
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
