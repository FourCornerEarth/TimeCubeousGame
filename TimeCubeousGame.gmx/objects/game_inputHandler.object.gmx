<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init input handler.

worldStateMap = ds_map_create();

textboxMap = ds_map_create();
menuMap = ds_map_create();
playerMap = ds_map_create();

ds_map_add(worldStateMap, WORLD_STATE.TEXTBOX, textboxMap);
ds_map_add(worldStateMap, WORLD_STATE.MENU, menuMap);
ds_map_add(worldStateMap, WORLD_STATE.PLAYER, playerMap);

ds_map_add(textboxMap, global.confirmKey, "runText");

ds_map_add(menuMap, global.confirmKey, "openMenuItem");
ds_map_add(menuMap, global.upKey, "menuUp");
ds_map_add(menuMap, global.downKey, "menuDn");
ds_map_add(menuMap, global.leftKey, "menuLt");
ds_map_add(menuMap, global.rightKey, "menuRt");
ds_map_add(menuMap, global.backKey, "menuBack");
ds_map_add(menuMap, global.startKey, "menuExit");

ds_map_add(playerMap, global.upKey, "moveUp");
ds_map_add(playerMap, global.downKey, "moveDn");
ds_map_add(playerMap, global.leftKey, "moveLt");
ds_map_add(playerMap, global.rightKey, "moveRt");
ds_map_add(playerMap, global.confirmKey, "NPCcheck");
ds_map_add(playerMap, global.startKey, "menuOpen");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check for a key press!

switch(keyboard_key) {
     case global.upKey: {
          if (global.gState == STATE.WORLD) {
             switch (global.wState) {
                    case WORLD_STATE.PLAYER: {
                         //movePlayerUp
                         break;
                    }
                    case WORLD_STATE.MENU: {
                         //moveMenuUp
                         break;
                    }
                    default: break;
             }//end inner switch
          } //end if
          break;
     }// end case
     case global.downKey: {
         if (global.gState == STATE.WORLD) {
             switch (global.wState) {
                    case WORLD_STATE.PLAYER: {
                         //movePlayerDown
                         break;
                    }
                    case WORLD_STATE.MENU: {
                         //moveMenuDown
                         break;
                    }
                    default: break;
             }//end inner switch
          }//end if
          break;
     }// end case
     case global.leftKey: {
         if (global.gState == STATE.WORLD) {
             switch (global.wState) {
                    case WORLD_STATE.PLAYER: {
                         //movePlayerLeft
                         break;
                    }
                    case WORLD_STATE.MENU: {
                         //moveMenuLeft
                         break;
                    }
                    default: break;
             }//end inner switch
          }//end if
          break;
     }// end case
     case global.rightKey: {
         if (global.gState == STATE.WORLD) {
             switch (global.wState) {
                    case WORLD_STATE.PLAYER: {
                         //movePlayerRight
                         break;
                    }
                    case WORLD_STATE.MENU: {
                         //moveMenuRight
                         break;
                    }
                    default: break;
             }//end inner switch
          }//end if
          break;
     }// end case
     case global.confirmKey: {
         if (global.gState == STATE.WORLD) {
             switch (global.wState) {
                    case WORLD_STATE.PLAYER: {
                         //checkForNPC
                         //if NPC, start convo.
                         break;
                    }
                    case WORLD_STATE.MENU: {
                         //selectChosenMenuItem
                         break;
                    }
                    case WORLD_STATE.TEXTBOX: {
                         //continueText
                         break;
                    }
                    default: break;
             }//end inner switch
          }//end if
          break;
     }// end case
     case global.backKey: {
         if (global.gState == STATE.WORLD) {
             switch (global.wState) {
                    case WORLD_STATE.MENU: {
                         //backOneMenu or closeCurrentMenu
                         break;
                    }
                    default: break;
             }//end inner switch
          }//end if
          break;
     }// end case
     case global.startKey: { 
          if (global.gState == STATE.WORLD) {
             switch (global.wState) {
                    case WORLD_STATE.PLAYER: {
                         //menuOpen
                         break;
                    }
                    case WORLD_STATE.MENU: {
                         //menuExit
                         break;
                    }
                    default: break;
             }//end inner switch
          } //end if
          break;
     }// end case
     case global.enterKey: {
          break;
     }// end case
     default: break;
}// end outer switch
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
