<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize the base menu
show_debug_message("BATTLE MENU CREATED.");

menub_makeBattleMenuArray();
menu_initMenuVariables();
menu_setMenuKeys();


// What script should we run when we've chosen something?
scriptToRun = menub_battleMenuOps;

// Add self to state tracking registry.
// Menu corresponds to the idling state in the player turn state.
objStateID = PLAYER_TURN_STATE.IDLE;
state_addSelfToRegistry(global.playerTurnState, global.playerTurnReg, objStateID);
battle_setNextState(battle_playerTurn, objStateID);

/** Customization variables **/
/* Feel free to change these to suit your game. */


VGAP = 20;
space = 150;
//show_debug_message("Player turn states at menu start are: " + string(global.playerTurnState));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>show_debug_message("BATTLE MENU DESTROY EVENT.");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Step Function

up = vk_up;
down = vk_down;
right = vk_right;
left = vk_left;
enter = vk_enter;

if (state_stepFuncOK(global.btlState) &amp;&amp; state_stepFuncOK(global.playerTurnState)) {
//show_debug_message(menuPage);
if (keyboard_check_pressed(up)) {
   menuSelected -=1;
   if (menuPage == 0 &amp;&amp; menuSelected &lt; 1) { menuSelected = menu[menuPage, 0]; }
   else if (menuPage == 2 &amp;&amp; menuSelected &lt; 1) { menuSelected = ds_list_size(temp_menu)-1;}
   /*else if (menuPage == 1 &amp;&amp; menuSelected &lt; 1) { menuSelected = ds_list_size(temp_menu)-1;}*/
}


else if (keyboard_check_pressed(down)) {
     menuSelected +=1;
     if (menuPage == 0 &amp;&amp; menuSelected &gt; menu[menuPage, 0]) { menuSelected = 1; }
     else if (menuPage == 2 &amp;&amp; menuSelected &gt; ds_list_size(temp_menu)-1) { menuSelected = 1;}
     /*else if (menuPage == 1 &amp;&amp; menuSelected &gt; ds_list_size(temp_menu)-1) { menuSelected = 1;}*/
}

else if (keyboard_check_pressed(enter)) {
     script_execute(scriptToRun);
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the menu GUI
draw_set_font(fnt_bubbleButts);

if (state_stepFuncOK(global.btlState) &amp;&amp; state_stepFuncOK(global.playerTurnState)) {
if (menuPage == 0) {       
       for (var i = 1; i &lt;= menu[menuPage, 0]; i+=1) {
           if (menuSelected == i) { draw_set_color(c_red); } else { draw_set_color(c_white); }
           draw_text(x, y + (i * 20) - 20, menu[menuPage, i]);
       }
}

/*else if (menuPage == 1) {
     for (var i = 1; i &lt; ds_list_size(temp_menu); i+=1) {
           if (menuSelected == i) { draw_set_color(c_red); } else { draw_set_color(c_blue); }
           if (i &lt; ds_list_size(temp_menu) - 1) {
              draw_text(x, y + (i * 16) - 16, temp_menu[| i] + ": " + string(count[i]));
           }
           else {
                draw_text(x, y + (i * 16) - 16, temp_menu[| i]);
           }
           //show_debug_message(temp_menu[| i] + ": " + string(count[i-1]));
     }
     
}*/

else if (menuPage == 2) {
     for (var i = 1; i &lt; ds_list_size(temp_menu); i+=1) {
           if (menuSelected == i) { draw_set_color(c_red); } else { draw_set_color(c_white); }
           if (i &lt; ds_list_size(temp_menu) - 1) {
              draw_text(x, y + (i * 20) - 20, temp_menu[| i] + ": " + string(count[i]));
           }
           else {
                draw_text(x, y + (i * 20) - 20, temp_menu[| i]);
           }
           //show_debug_message(temp_menu[| i] + ": " + string(count[i-1]));
     }
     
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
